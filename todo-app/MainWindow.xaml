<Window x:Class="todo_app.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:todo_app"
        xmlns:viewModels="clr-namespace:todo_app.ViewModels"
        xmlns:converters="clr-namespace:todo_app.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        FontSize="18" FontWeight="DemiBold" Background="#59577F">
    <!--<Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Control" Command="Open"/>
        <KeyBinding Key="S" Modifiers="Control" Command="SaveAs"/>
        <KeyBinding Key="N" Modifiers="Control" Command="New"/>
        <KeyBinding Key="Enter" Command=""/>
    </Window.InputBindings>-->
    <Window.Resources>
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="White" />
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="White" />

        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters:TreeViewItemNestingLevelToIndentationConverter
            x:Key="TreeViewItemNestingLevelToIndentationConverter" />
        <Style TargetType="{x:Type Grid}" x:Key="BaseGrid">
            <Setter Property="Background" Value="#A9A5F4" />
            <Setter Property="Margin" Value="10" />
        </Style>
        <Style TargetType="{x:Type ListView}" x:Key="BaseListView">
            <Setter Property="Background" Value="#928ED1" />
            <Setter Property="BorderBrush" Value="#3C3B57" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        </Style>
        <Style TargetType="{x:Type TreeView}" x:Key="BaseTreeView">
            <Setter Property="Background" Value="#928ED1" />
            <Setter Property="BorderBrush" Value="#3C3B57" />
            <Setter Property="BorderThickness" Value="2" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="BaseTextBlock">
            <Setter Property="Foreground" Value="#3C3B57" />
        </Style>
        <Style TargetType="{x:Type Border}" x:Key="BaseBorder">
            <Setter Property="BorderBrush" Value="#3C3B57" />
            <Setter Property="BorderThickness" Value="2" />
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="BaseTextBox">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="#A9A5F4" />
            <Setter Property="Foreground" Value="#3C3B57" />
            <Setter Property="IsHitTestVisible" Value="True" />
            <Setter Property="TextWrapping" Value="WrapWithOverflow" />
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="IsHitTestVisible" Value="False" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ComboBoxItem}" x:Key="BaseComboBoxItem">
            <Setter Property="BorderThickness" Value="2 1" />
            <Setter Property="BorderBrush" Value="#3C3B57" />
            <Setter Property="Background" Value="#A9A5F4" />
            <Setter Property="Foreground" Value="#3C3B57" />
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border BorderBrush="#3C3B57" Background="#A9A5F4"
                                Cursor="Hand">
                            <ComboBoxItem Foreground="#3C3B57">
                                <ContentPresenter HorizontalAlignment="Left" 
                                                  VerticalAlignment="Center"/>
                            </ComboBoxItem>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>

        <Style TargetType="{x:Type ComboBox}" x:Key="BaseComboBox">
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="#3C3B57" />
            <Setter Property="Background" Value="#A9A5F4" />
            <Setter Property="Foreground" Value="#3C3B57" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource BaseComboBoxItem}" />
            <Setter Property="IsHitTestVisible" Value="True" />
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="IsHitTestVisible" Value="False" />
                </Trigger>
            </Style.Triggers>
            <!--<Setter Property="ItemTemplate" Value="0" />-->
        </Style>

        <Style TargetType="{x:Type ListViewItem}" x:Key="BaseListViewItem">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Black" />
            </Style.Resources>
        </Style>

        <Style TargetType="{x:Type TreeViewItem}" x:Key="BaseTreeViewItem">
            <Setter Property="Foreground" Value="#3C3B57" />
        </Style>

        <Style TargetType="{x:Type Grid}" BasedOn="{StaticResource BaseGrid}" />
        <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource BaseListView}" />
        <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource BaseTreeView}" />
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}" />
        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource BaseBorder}" />
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextBox}" />
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BaseComboBox}" />
        <!--<Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource BaseComboBoxItem}" />-->
        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource BaseListViewItem}" />
        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource BaseTreeViewItem}" />
    </Window.Resources>
    <Window.DataContext>
        <viewModels:MainViewModel />
    </Window.DataContext>
    <Border Margin="15">
        <Grid Margin="0">
            <Grid.ColumnDefinitions>
                <!--Project List Column-->
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <!--Selected Project Column-->
                <ColumnDefinition>
                    <ColumnDefinition.Style>
                        <Style TargetType="{x:Type ColumnDefinition}">
                            <Setter Property="Width" Value="*" />
                            <Setter Property="MinWidth" Value="100" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedProject}" Value="{x:Null}">
                                    <Setter Property="Width" Value="0" />
                                    <Setter Property="MinWidth" Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                </ColumnDefinition>
                <ColumnDefinition Width="Auto" />
                <!--Selected Task Column-->
                <ColumnDefinition Width="Auto">
                    <ColumnDefinition.Style>
                        <Style TargetType="{x:Type ColumnDefinition}">
                            <Setter Property="Width" Value="Auto" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedProject}" Value="{x:Null}">
                                    <Setter Property="Width" Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Text="Проекты: " />
                <ListView Grid.Row="1" ItemsSource="{Binding Projects, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedProject, UpdateSourceTrigger=PropertyChanged}">
                    <ListView.Resources>
                        <ContextMenu x:Key="ProjectsListViewItemContextMenu"
                                     DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext}">
                            <!--<MenuItem Command="{Binding EditCommand}">
                                <MenuItem.Style>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Header" Value="Редактировать" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                <Setter Property="Header" Value="Завершить редактирование" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>-->
                            <MenuItem
                                Header="Удалить"
                                Command="{Binding RemoveProjectsCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=SelectedItems}" />
                            <MenuItem Header="Редактирование" IsCheckable="True"
                                      IsChecked="{Binding SelectedProject.IsEditing, UpdateSourceTrigger=Explicit}"
                                      Command="{Binding EditProjectsCommand}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=SelectedItems}" />
                        </ContextMenu>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource BaseListViewItem}">
                            <Setter Property="ContextMenu" Value="{StaticResource ProjectsListViewItemContextMenu}" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid
                                Width="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=ActualWidth}">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="3" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}"
                                           BasedOn="{StaticResource BaseTextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Resources>

                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Название: " />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="Описание: " />

                                <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Name }">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}"
                                               BasedOn="{StaticResource BaseTextBox}">
                                            <Setter Property="IsReadOnly" Value="True" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                    <Setter Property="IsReadOnly" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>

                                <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Description }">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}"
                                               BasedOn="{StaticResource BaseTextBox}">
                                            <Setter Property="IsReadOnly" Value="True" />
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding IsEditing, UpdateSourceTrigger=PropertyChanged}"
                                                    Value="True">
                                                    <Setter Property="IsReadOnly" Value="False" />
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>

                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Добавить" Command="{Binding AddProjectCommand}" />
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>
            </Grid>
            <GridSplitter Grid.Column="1" Width="5" Background="Transparent"
                          HorizontalAlignment="Center" VerticalAlignment="Stretch" />
            <Grid Grid.Column="2" Grid.IsSharedSizeScope="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Text="Проект: " />

                <!-- Column headers -->
                <TreeViewItem Grid.Row="1" IsSelected="False" MouseRightButtonDown="UIElement_OnMouseRightButtonDown">
                    <TreeViewItem.Header>
                        <Grid>
                            <Grid.Resources>
                                <Style TargetType="{x:Type GridSplitter}">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="Width" Value="2" />
                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                    <Setter Property="Margin" Value="5 0" />
                                    <Setter Property="Background" Value="#3C3B57" />
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="Type" Width="Auto" />
                                <ColumnDefinition SharedSizeGroup="Split" Width="Auto" />
                                <ColumnDefinition SharedSizeGroup="Task" Width="Auto" />
                                <!-- Placeholders for two columns of ToggleButton -->
                                <ColumnDefinition SharedSizeGroup="Split" Width="Auto" />
                                <ColumnDefinition SharedSizeGroup="Descr" Width="Auto" />
                                <ColumnDefinition SharedSizeGroup="Split" Width="Auto" />
                                <ColumnDefinition SharedSizeGroup="State" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Тип" />
                            <!-- Empty TreeViewItem to measure the size of its ToggleButton into the "Toggle" group-->
                            <GridSplitter Grid.Column="1" />
                            <TextBlock Grid.Column="2" Text="Название" />
                            <GridSplitter Grid.Column="3" />
                            <TextBlock Grid.Column="4" Text="Описание" />
                            <GridSplitter Grid.Column="5" />
                            <TextBlock Grid.Column="6" Text="Состояние" />
                        </Grid>
                    </TreeViewItem.Header>
                </TreeViewItem>

                <TreeView Grid.Row="2"
                          ItemsSource="{Binding SelectedProject.Tasks, UpdateSourceTrigger=PropertyChanged}">
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type viewModels:TaskViewModel}"
                                                  ItemsSource="{Binding Tasks, UpdateSourceTrigger=PropertyChanged}">
                            <Border BorderThickness="2 1 2 1" BorderBrush="#3C3B57" Background="#A9A5F4">
                                <Grid>
                                    <Grid.Resources>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextBox}">
                                            <Setter Property="Padding" Value="7 3" />
                                            <Setter Property="Margin"
                                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}},Converter={StaticResource TreeViewItemNestingLevelToIndentationConverter}}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=DataContext.SelectedProject.IsEditing, UpdateSourceTrigger=PropertyChanged}"
                                                    Value="False">
                                                    <Setter Property="IsReadOnly" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BaseComboBox}">
                                            <Setter Property="Padding" Value="7 3" />
                                            <Setter Property="Height" Value="30" />
                                            <Setter Property="VerticalAlignment" Value="Top" />
                                            <Setter Property="Margin"
                                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}},Converter={StaticResource TreeViewItemNestingLevelToIndentationConverter}}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=DataContext.SelectedProject.IsEditing, UpdateSourceTrigger=PropertyChanged}"
                                                    Value="False">
                                                    <Setter Property="IsReadOnly" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Type" Width="Auto" />
                                        <ColumnDefinition SharedSizeGroup="Task" Width="Auto" />
                                        <!-- Placeholders for two columns of ToggleButton -->
                                        <ColumnDefinition SharedSizeGroup="Descr" Width="Auto" />
                                        <ColumnDefinition SharedSizeGroup="State" Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding Type.Name}" Padding="7 3" />
                                    <TextBox Text="{Binding Name}" Grid.Column="1" />
                                    <TextBox Text="{Binding Description}" Grid.Column="2" />
                                    <ComboBox Grid.Column="3"
                                              ItemsSource="{Binding Path=DataContext.SelectedProject.DefaultTaskStates, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"
                                              SelectedItem="{Binding State, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedIndex="0"
                                              DisplayMemberPath="Name" />
                                    <!--<Border Grid.Column="1" BorderThickness="2 0 0 0">
                                        <TextBox Text="{Binding Type.Name}">
                                            --><!--<TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
                                            <Setter Property="Margin" Value="-45 0 0 0" />
                                            <Setter Property="Padding" Value="45 0 0 0" />
                                        </Style>
                                    </TextBlock.Style>--><!--
                                        </TextBox>
                                    </Border>-->
                                </Grid>
                            </Border>
                        </HierarchicalDataTemplate>
                        <ContextMenu x:Key="TaskTreeViewItemContextMenu">
                            <MenuItem Header="Создать"
                                      ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=DataContext.SelectedProject.DefaultTaskTypes, UpdateSourceTrigger=PropertyChanged}">
                                <MenuItem.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </MenuItem.ItemTemplate>
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding AddSubTaskCommand}" />
                                        <Setter Property="CommandParameter"
                                                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=SelectedItem}" />
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                            <MenuItem Header="Удалить"
                                      Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=DataContext.SelectedProject.DeleteTaskCommand}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=SelectedItem}" />
                        </ContextMenu>
                        <ContextMenu x:Key="TaskTreeViewContextMenu">
                            <MenuItem Header="Создать"
                                      ItemsSource="{Binding SelectedProject.DefaultTaskTypes, UpdateSourceTrigger=PropertyChanged}">
                                <MenuItem.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </MenuItem.ItemTemplate>
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding AddSubTaskCommand}" />
                                        <Setter Property="CommandParameter"
                                                Value="{Binding Path=DataContext.SelectedProject, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" />
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </ContextMenu>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource BaseTreeViewItem}">
                            <Setter Property="ContextMenu" Value="{StaticResource TaskTreeViewItemContextMenu}" />
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=DataContext.SelectedProject.IsEditing, UpdateSourceTrigger=PropertyChanged}"
                                    Value="False">
                                    <Setter Property="ContextMenu" Value="{x:Null}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.Style>
                        <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource BaseTreeView}">
                            <Setter Property="ContextMenu" Value="{StaticResource TaskTreeViewContextMenu}" />
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding SelectedProject.IsEditing, UpdateSourceTrigger=PropertyChanged}"
                                    Value="False">
                                    <Setter Property="ContextMenu" Value="{x:Null}" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding SelectedProject, UpdateSourceTrigger=PropertyChanged}"
                                    Value="{x:Null}">
                                    <Setter Property="ContextMenu" Value="{x:Null}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.Style>
                </TreeView>
            </Grid>

            <GridSplitter Grid.Column="3" Width="5" Background="Transparent"
                          HorizontalAlignment="Center" VerticalAlignment="Stretch" />
            <Grid Grid.Column="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Text="Задача: " />
                <Border Grid.Row="1" Background="#928ED1" />
            </Grid>
        </Grid>
    </Border>
</Window>