<Window x:Class="todo_app.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:todo_app"
        xmlns:viewModels="clr-namespace:todo_app.ViewModels"
        xmlns:converters="clr-namespace:todo_app.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        FontSize="18" FontWeight="DemiBold" Background="#59577F">
    <!--<Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Control" Command="Open"/>
        <KeyBinding Key="S" Modifiers="Control" Command="SaveAs"/>
        <KeyBinding Key="N" Modifiers="Control" Command="New"/>
        <KeyBinding Key="Enter" Command=""/>
    </Window.InputBindings>-->
    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <Style TargetType="{x:Type Grid}" x:Key="BaseGrid">
            <Setter Property="Background" Value="#A9A5F4" />
            <Setter Property="Margin" Value="10" />
        </Style>
        <Style TargetType="{x:Type ListView}" x:Key="BaseListView">
            <Setter Property="Background" Value="#928ED1" />
            <Setter Property="BorderBrush" Value="#3C3B57" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        </Style>
        <Style TargetType="{x:Type TreeView}" x:Key="BaseTreeView">
            <Setter Property="Background" Value="#928ED1" />
            <Setter Property="BorderBrush" Value="#3C3B57" />
            <Setter Property="BorderThickness" Value="2" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="BaseTextBlock">
            <Setter Property="Foreground" Value="#3C3B57" />
        </Style>
        <Style TargetType="{x:Type Border}" x:Key="BaseBorder">
            <Setter Property="BorderBrush" Value="#3C3B57" />
            <Setter Property="BorderThickness" Value="2" />
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="BaseTextBox">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="#A9A5F4" />
            <Setter Property="Foreground" Value="#3C3B57" />
            <Setter Property="IsHitTestVisible" Value="True" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="MinWidth" Value="100" />
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="IsHitTestVisible" Value="False" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ListViewItem}" x:Key="BaseListViewItem">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Black" />
            </Style.Resources>
        </Style>
        <Style TargetType="{x:Type TreeViewItem}" x:Key="BaseTreeViewItem">
            <Setter Property="Foreground" Value="#3C3B57" />
        </Style>

        <Style TargetType="{x:Type Grid}" BasedOn="{StaticResource BaseGrid}" />
        <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource BaseListView}" />
        <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource BaseTreeView}" />
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}" />
        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource BaseBorder}" />
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextBox}" />
        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource BaseListViewItem}" />
        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource BaseTreeViewItem}" />
    </Window.Resources>
    <Window.DataContext>
        <viewModels:MainViewModel />
    </Window.DataContext>
    <Border Margin="15">
        <Grid Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MinWidth="100" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Text="Проекты: " />
                <ListView Grid.Row="1" ItemsSource="{Binding Projects, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedProject, UpdateSourceTrigger=PropertyChanged}">
                    <ListView.Resources>
                        <ContextMenu x:Key="ProjectsListViewItemContextMenu">
                            <MenuItem Command="{Binding EditProjectCommand}">
                                <MenuItem.Style>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Header" Value="Редактировать" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                <Setter Property="Header" Value="Завершить редактирование" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>
                            <MenuItem
                                DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext}"
                                Header="Удалить" Command="{Binding RemoveProjectCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=SelectedItem}" />
                        </ContextMenu>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource BaseListViewItem}">
                            <Setter Property="ContextMenu" Value="{StaticResource ProjectsListViewItemContextMenu}" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid
                                Width="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=ActualWidth}">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="3" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Название: ">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource BaseTextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="Описание: ">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource BaseTextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Name }">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}"
                                               BasedOn="{StaticResource BaseTextBox}">
                                            <Setter Property="IsReadOnly" Value="True" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                    <Setter Property="IsReadOnly" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Description }">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}"
                                               BasedOn="{StaticResource BaseTextBox}">
                                            <Setter Property="IsReadOnly" Value="True" />
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                    <Setter Property="IsReadOnly" Value="False" />
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Добавить" Command="{Binding AddProjectCommand}" />
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>
            </Grid>
            <GridSplitter Grid.Column="1" Width="5" Background="Transparent"
                          HorizontalAlignment="Center" VerticalAlignment="Stretch" />
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Text="Проект: " />
                <TreeView Grid.Row="1"
                          ItemsSource="{Binding SelectedProject.Tasks, UpdateSourceTrigger=PropertyChanged}">
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type viewModels:TaskViewModel}"
                                                  ItemsSource="{Binding SubTasks, UpdateSourceTrigger=PropertyChanged}">
                            <TextBlock Text="{Binding Name}" />
                        </HierarchicalDataTemplate>
                        <ContextMenu x:Key="TaskTreeViewItemContextMenu">
                            <MenuItem Header="Создать подзадачу"
                                      Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=DataContext.SelectedProject.CreateTaskCommand}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=SelectedItem}" />
                            <MenuItem Header="Удалить подзадачу"
                                      Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=DataContext.SelectedProject.DeleteTaskCommand}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=SelectedItem}" />
                        </ContextMenu>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource BaseTreeViewItem}">
                            <Setter Property="ContextMenu" Value="{StaticResource TaskTreeViewItemContextMenu}" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Создать" 
                                      Command="{Binding SelectedProject.CreateTaskCommand}" />
                        </ContextMenu>
                    </TreeView.ContextMenu>
                </TreeView>
            </Grid>

            <GridSplitter Grid.Column="3" Width="5" Background="Transparent"
                          HorizontalAlignment="Center" VerticalAlignment="Stretch" />
            <Grid Grid.Column="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Text="Задача: " />
                <Border Grid.Row="1" Background="#928ED1" />
            </Grid>
        </Grid>
    </Border>
</Window>